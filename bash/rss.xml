<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Pype's mental data lake - bash posts</title><link>https://pype.dev/bash-rss.xml</link><description>Pypeaday posts - bash posts</description><atom:link href="https://pype.dev/bash-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>bitmoji.png</url><title>Pype's mental data lake - bash posts</title><link>https://pype.dev/bash-rss.xml</link></image><language>en</language><lastBuildDate>Sat, 25 Jun 2022 12:28:37 +0000</lastBuildDate><item><title>Stow</title><link>https://pype.dev/til/stow</link><description>Stow is a great tool for managing dotfiles. My usage looks like cloning my dotfiles to my home directory, setting some environment variables via a script, then </description><content:encoded>&lt;p&gt;Stow is a great tool for managing dotfiles. My usage looks like cloning my dotfiles to my home directory, setting some environment variables via a script, then stowing relevant packages and boom my config is good to go...&lt;/p&gt;&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~git clone &amp;lt;my dotfiles repo&amp;gt;&lt;span class="nb"&gt;cd&lt;/span&gt; dotfiles&lt;span class="c1"&gt;# env variable stuff ignored here&lt;/span&gt;stow zsh  &lt;span class="c1"&gt;# This will symlink my .zshrc file which is in ~/dotfiles/zsh to ~/.zshrc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;By default stow will stow packages up one directory from the root directory. In this example the root directory is &lt;code&gt;~/dotfiles&lt;/code&gt; and the package is &lt;code&gt;zsh&lt;/code&gt;.So the files in the &lt;code&gt;zsh&lt;/code&gt; package will symlinked into &lt;code&gt;~/&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;code&gt;stow&lt;/code&gt; makes it easy to share dotfiles across machines, or safely experiment with config changes while always being protected by &lt;code&gt;git&lt;/code&gt; since your dotfiles are in a git repo!...They are in a git repo... right?&lt;/p&gt;</content:encoded><guid isPermaLink="false">https://pype.dev/til/stow</guid><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Stow-Target</title><link>https://pype.dev/til/stow-target</link><description>Check out  What if I want to stow a package somewhere else? Maybe I don</description><content:encoded>&lt;p&gt;Check out &lt;a href="/stow"&gt;stow&lt;/a&gt; for a brief introduction to &lt;code&gt;stow&lt;/code&gt;&lt;/p&gt;&lt;p&gt;What if I want to stow a package somewhere else?Boom, that's where &lt;code&gt;-t&lt;/code&gt; comes in...&lt;/p&gt;&lt;p&gt;Maybe I don't like having my &lt;code&gt;dotfiles&lt;/code&gt; repo at &lt;code&gt;$HOME&lt;/code&gt; and instead I want it in &lt;code&gt;~/git&lt;/code&gt; or &lt;code&gt;~/personal&lt;/code&gt; just to stay organized...Well then I could have the same workflow except the &lt;code&gt;stow&lt;/code&gt; command looks like this:&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stow zsh -t ~/&lt;span class="c1"&gt;#or&lt;/span&gt;stow zsh -t &lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded><guid isPermaLink="false">https://pype.dev/til/stow-target</guid><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate></item></channel></rss>