<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Pype's mental data lake - meta posts</title><link>https://pype.dev/meta-rss.xml</link><description>Pypeaday posts - meta posts</description><atom:link href="https://pype.dev/meta-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>bitmoji.png</url><title>Pype's mental data lake - meta posts</title><link>https://pype.dev/meta-rss.xml</link></image><language>en</language><lastBuildDate>Sat, 25 Jun 2022 12:28:37 +0000</lastBuildDate><item><title>Tiddly-Wiki</title><link>https://pype.dev/tiddly-wiki</link><description>The tiddlywiki is just an  Taking notes in the tidlywiki is nice because it supports a format similar to Markdown although it is specific to tidlywiki. Here The</description><content:encoded>&lt;p&gt;&lt;a href="https://tiddlywiki.com/"&gt;Tiddly Wiki&lt;/a&gt; is a great note taking utility for organizing non-linear notes.I used it to replace my OneNote workflow and my only complaint is I don't have an easy way to access and edit my tiddlers (posts) if I'm not at home.&lt;/p&gt;&lt;p&gt;The tiddlywiki is just an &lt;code&gt;html&lt;/code&gt; file with a ton of stuff above my head baked in. I have a barebones repo with some notes and a nice starter tiddly wiki init on &lt;a href="https://github.com/nicpayne713/tiddlywiki-tutorial"&gt;my github&lt;/a&gt;.Usage is pretty basic... Just grab the &lt;code&gt;notebook/template.htlm&lt;/code&gt; and save it to anywhere convenient on your computer.I put mine on my NAS to have the security of backups since I don't keep my tidldlywiki in a git repo (I don't really want to look at the diff).&lt;/p&gt;&lt;p&gt;Taking notes in the tidlywiki is nice because it supports a format similar to Markdown although it is specific to tidlywiki. Tiddlers (each post in the wiki) can be tagged and linked together and it's really easy to send notes to someone by just exporting an html file and emailing it since it'll open up by default in a broswer with all the nice formatting already apart of it.I was using it primarily for taking notes for a small group I lead and sending those notes each week.The group benefited from nicely formatted notes and I benefited from a centralized place to keep them all that Microsoft didn't own!&lt;/p&gt;&lt;p&gt;Here's an example of the body of a tiddler with some tiddlywiki specific formatting:&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;! Static IPs on Linux//Ubuntu 20//Setting static IP on Ubuntu 20.04# Navigate to /etc/netplan# Open the yaml file (the name seems to be kind of random but it seems to starts with 00 or 05)# Change the file as below with your desired settings# Run `sudo netplan apply` to have changes reflected    ```yaml    network:      version: 2      ethernets:        enp0s4:          addresses: [192.168.1.{Static IP}/24]          gateway4: 192.168.1.1          nameservers:            addresses: [8.8.4.4, 8.8.8.8]    ```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="Alt text" src="/images/tiddlywiki-example.png" title="A Tiddler" /&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;#&lt;/code&gt; create a numbered list, &lt;code&gt;//&lt;/code&gt; creates an italicized heading, and &lt;code&gt;!&lt;/code&gt; creates headings similar to Markdown's &lt;code&gt;#&lt;/code&gt;. The differences aren't too bad to keep in mind and what renders out is totally depenent on the tidlywiki itself. My template has a nice nord feel to it, feel free to download from my github and try it out!&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I have moved away from my tiddlywiki workflow in favor of sites like this since I can git commit markdown files and build with &lt;a href="https://markata.dev/"&gt;markata&lt;/a&gt; pretty easily (credit &lt;a href="www.waylonwalker.com"&gt;waylon walker&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;I still use tiddlywiki for tracking some todo items and questions --- I may have another solution in the future&lt;/p&gt;&lt;/blockquote&gt;</content:encoded><guid isPermaLink="false">https://pype.dev/tiddly-wiki</guid><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Wireguard</title><link>https://pype.dev/wireguard</link><description>Virtual Private Networks are a big deal, and this shouldn Wireguard is an awesome peer-to-peer VPN tunnel that makes it really easy for me to get into my home n</description><content:encoded>&lt;h2 id="vpn"&gt;VPN&lt;/h2&gt;&lt;p&gt;Virtual Private Networks are a big deal, and this shouldn't be considered anything even close to a guide on using them.Here are just my notes and some setup for how I use &lt;a href="https://www.wireguard.com/"&gt;wireguard&lt;/a&gt; at home.&lt;/p&gt;&lt;h2 id="wireguard"&gt;Wireguard&lt;/h2&gt;&lt;p&gt;Wireguard is an awesome peer-to-peer VPN tunnel that makes it really easy for me to get into my home network when I'm out and about.My main reasons for this are 1. I don't trust public wi-fi and 2. I want to use pi-hole for ad blocking when I'm not at home&lt;/p&gt;&lt;p&gt;Wireguard can be configured as a "peer-to-site" VPN tunnel as well.My vpn setup let's me jump to various machines on my network from anywhere!&lt;/p&gt;&lt;p&gt;I use &lt;a href="https://pivpn.io/"&gt;pivpn&lt;/a&gt; in a VM that's already running &lt;code&gt;pi-hole&lt;/code&gt; to host my wireguard server.It's super easy to setup just by following the instructions on the pivpn site.&lt;/p&gt;&lt;p&gt;The reason I like it is that I have a nice &lt;code&gt;cli&lt;/code&gt; for managing wireguard configs.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dumbledore@pihole-vpn:~$ pivpn::: Control all PiVPN specific functions!:::::: Usage: pivpn &amp;lt;command&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;option&lt;span class="o"&gt;]&lt;/span&gt;:::::: Commands::::    -a, add              Create a client conf profile:::    -c, clients          List any connected clients to the server:::    -d, debug            Start a debugging session &lt;span class="k"&gt;if&lt;/span&gt; having trouble:::    -l, list             List all clients:::   -qr, qrcode           Show the qrcode of a client &lt;span class="k"&gt;for&lt;/span&gt; use with the mobile app:::    -r, remove           Remove a client:::  -off, off              Disable a user:::   -on, on               Enable a user:::    -h, &lt;span class="nb"&gt;help&lt;/span&gt;             Show this &lt;span class="nb"&gt;help&lt;/span&gt; dialog:::    -u, uninstall        Uninstall pivpn from your system!:::   -up, update           Updates PiVPN Scripts:::   -bk, backup           Backup VPN configs and user profiles&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I'm ready to add a new client to my &lt;code&gt;wg&lt;/code&gt; network, it's as easy as &lt;code&gt;pivpn add&lt;/code&gt; and follow the instructions.The easiest part here is that you'll be given a QR code in the terminal that you can just scan with the client (like a smart phone) and you'll have your wireguard config handled by the app (oh right, download the wireguard app) in no time!&lt;/p&gt;</content:encoded><guid isPermaLink="false">https://pype.dev/wireguard</guid><pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate></item></channel></rss>